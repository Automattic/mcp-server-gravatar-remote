/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type {
  SetEmailAvatarMutationRequest,
  SetEmailAvatarMutationResponse,
  SetEmailAvatarPathParams,
  SetEmailAvatar401,
  SetEmailAvatar403,
} from '../../models/avatarsModels/SetEmailAvatar.js'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'

function getSetEmailAvatarUrl(imageId: SetEmailAvatarPathParams['imageId']) {
  return `/me/avatars/${imageId}/email` as const
}

/**
 * @description Sets the avatar for the provided email hash.
 * @summary Set avatar for the hashed email
 * {@link /me/avatars/:imageId/email}
 */
export async function setEmailAvatar(
  imageId: SetEmailAvatarPathParams['imageId'],
  data: SetEmailAvatarMutationRequest,
  config: Partial<RequestConfig<SetEmailAvatarMutationRequest>> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const requestData = data
  const res = await request<SetEmailAvatarMutationResponse, ResponseErrorConfig<SetEmailAvatar401 | SetEmailAvatar403>, SetEmailAvatarMutationRequest>({
    method: 'POST',
    url: getSetEmailAvatarUrl(imageId).toString(),
    data: requestData,
    ...requestConfig,
  })
  return res.data
}