/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type {
  GetQrCodeBySha256HashQueryResponse,
  GetQrCodeBySha256HashPathParams,
  GetQrCodeBySha256HashQueryParams,
  GetQrCodeBySha256Hash429,
  GetQrCodeBySha256Hash500,
} from '../models/GetQrCodeBySha256Hash.js'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'

function getGetQrCodeBySha256HashUrl(sha256_hash: GetQrCodeBySha256HashPathParams['sha256_hash']) {
  return `/qr-code/${sha256_hash}` as const
}

/**
 * @description Returns a QR code for an email address by the given SHA256 hash.
 * @summary Get QR code for an email address' profile
 * {@link /qr-code/:sha256_hash}
 */
export async function getQrCodeBySha256Hash(
  sha256_hash: GetQrCodeBySha256HashPathParams['sha256_hash'],
  params?: GetQrCodeBySha256HashQueryParams,
  config: Partial<RequestConfig> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const res = await request<GetQrCodeBySha256HashQueryResponse, ResponseErrorConfig<GetQrCodeBySha256Hash429 | GetQrCodeBySha256Hash500>, unknown>({
    method: 'GET',
    url: getGetQrCodeBySha256HashUrl(sha256_hash).toString(),
    params,
    ...requestConfig,
  })
  return res.data
}