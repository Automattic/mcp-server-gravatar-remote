/* tslint:disable */
/* eslint-disable */
/**
 * Gravatar Public API
 * Gravatar\'s public API endpoints
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * The languages the user knows. This is only provided in authenticated API requests.
 * @export
 * @interface Language
 */
export interface Language {
    /**
     * The language code.
     * @type {string}
     * @memberof Language
     */
    code: string;
    /**
     * The language name.
     * @type {string}
     * @memberof Language
     */
    name: string;
    /**
     * Whether the language is the user's primary language.
     * @type {boolean}
     * @memberof Language
     */
    isPrimary: boolean;
    /**
     * The order of the language in the user's profile.
     * @type {number}
     * @memberof Language
     */
    order: number;
}

/**
 * Check if a given object implements the Language interface.
 */
export function instanceOfLanguage(value: object): value is Language {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('isPrimary' in value) || value['isPrimary'] === undefined) return false;
    if (!('order' in value) || value['order'] === undefined) return false;
    return true;
}

export function LanguageFromJSON(json: any): Language {
    return LanguageFromJSONTyped(json, false);
}

export function LanguageFromJSONTyped(json: any, ignoreDiscriminator: boolean): Language {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'],
        'name': json['name'],
        'isPrimary': json['is_primary'],
        'order': json['order'],
    };
}

export function LanguageToJSON(json: any): Language {
    return LanguageToJSONTyped(json, false);
}

export function LanguageToJSONTyped(value?: Language | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': value['code'],
        'name': value['name'],
        'is_primary': value['isPrimary'],
        'order': value['order'],
    };
}

