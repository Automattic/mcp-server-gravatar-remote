/* tslint:disable */
/* eslint-disable */
/**
 * Gravatar Public API
 * Gravatar\'s public API endpoints
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * A verified account on a user's profile.
 * @export
 * @interface VerifiedAccount
 */
export interface VerifiedAccount {
    /**
     * The type of the service.
     * @type {string}
     * @memberof VerifiedAccount
     */
    serviceType: string;
    /**
     * The name of the service.
     * @type {string}
     * @memberof VerifiedAccount
     */
    serviceLabel: string;
    /**
     * The URL to the service's icon.
     * @type {string}
     * @memberof VerifiedAccount
     */
    serviceIcon: string;
    /**
     * The URL to the user's profile on the service.
     * @type {string}
     * @memberof VerifiedAccount
     */
    url: string;
    /**
     * Whether the verified account is hidden from the user's profile.
     * @type {boolean}
     * @memberof VerifiedAccount
     */
    isHidden: boolean;
}

/**
 * Check if a given object implements the VerifiedAccount interface.
 */
export function instanceOfVerifiedAccount(value: object): value is VerifiedAccount {
    if (!('serviceType' in value) || value['serviceType'] === undefined) return false;
    if (!('serviceLabel' in value) || value['serviceLabel'] === undefined) return false;
    if (!('serviceIcon' in value) || value['serviceIcon'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('isHidden' in value) || value['isHidden'] === undefined) return false;
    return true;
}

export function VerifiedAccountFromJSON(json: any): VerifiedAccount {
    return VerifiedAccountFromJSONTyped(json, false);
}

export function VerifiedAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): VerifiedAccount {
    if (json == null) {
        return json;
    }
    return {
        
        'serviceType': json['service_type'],
        'serviceLabel': json['service_label'],
        'serviceIcon': json['service_icon'],
        'url': json['url'],
        'isHidden': json['is_hidden'],
    };
}

export function VerifiedAccountToJSON(json: any): VerifiedAccount {
    return VerifiedAccountToJSONTyped(json, false);
}

export function VerifiedAccountToJSONTyped(value?: VerifiedAccount | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'service_type': value['serviceType'],
        'service_label': value['serviceLabel'],
        'service_icon': value['serviceIcon'],
        'url': value['url'],
        'is_hidden': value['isHidden'],
    };
}

