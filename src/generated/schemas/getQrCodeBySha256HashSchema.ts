/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { errorSchema } from './errorSchema.js'
import { z } from 'zod'

export const getQrCodeBySha256HashPathParamsSchema = z.object({
  sha256_hash: z.string().describe('The SHA256 hash of the email address or profile URL slug.'),
})

export const getQrCodeBySha256HashQueryParamsSchema = z
  .object({
    size: z.coerce.number().int().describe('The size of the QR code.').optional(),
    version: z.string().describe('The version of the QR code.').optional(),
    utm_medium: z.string().describe('The medium of the UTM parameters. Appended to the URL in the QR code.').optional(),
    utm_campaign: z.string().describe('The campaign of the UTM parameters. Appended to the URL in the QR code.').optional(),
    type: z.string().describe("The type of center icon to display ('user' for avatar, 'gravatar' for logo, 'none' for no icon).").optional(),
  })
  .optional()

/**
 * @description Successful response
 */
export const getQrCodeBySha256Hash200Schema = z.instanceof(File)

/**
 * @description Rate Limit Exceeded
 */
export const getQrCodeBySha256Hash429Schema = z.lazy(() => errorSchema).describe('An error response from the API.')

/**
 * @description Internal server error
 */
export const getQrCodeBySha256Hash500Schema = z.unknown()

export const getQrCodeBySha256HashQueryResponseSchema = z.lazy(() => getQrCodeBySha256Hash200Schema)