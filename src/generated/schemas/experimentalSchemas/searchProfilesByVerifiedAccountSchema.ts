/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { errorSchema } from '../errorSchema.js'
import { profileSchema } from '../profileSchema.js'
import { z } from 'zod'

export const searchProfilesByVerifiedAccountQueryParamsSchema = z.object({
  username: z.string().describe('The username used on the verified third-party service.'),
  service: z.string().describe("The service to limit search to (e.g., 'github', 'twitter'). See `/verified-accounts/services` for supported IDs.").optional(),
  page: z.coerce.number().int().min(1).default(1).describe('Page number of results to retrieve.'),
  per_page: z.coerce.number().int().min(1).max(50).default(20).describe('Number of results per page. Defaults to 20, maximum 50.'),
})

/**
 * @description List of matching profiles
 */
export const searchProfilesByVerifiedAccount200Schema = z.object({
  profiles: z.array(z.lazy(() => profileSchema).describe("A user's profile information.")),
  total_pages: z.number().int().describe('Total number of pages available.'),
})

/**
 * @description Missing or invalid parameters
 */
export const searchProfilesByVerifiedAccount400Schema = z.lazy(() => errorSchema).describe('An error response from the API.')

/**
 * @description Not Authorized
 */
export const searchProfilesByVerifiedAccount401Schema = z.lazy(() => errorSchema).describe('An error response from the API.')

/**
 * @description Rate Limit Exceeded
 */
export const searchProfilesByVerifiedAccount429Schema = z.lazy(() => errorSchema).describe('An error response from the API.')

/**
 * @description Internal server error
 */
export const searchProfilesByVerifiedAccount500Schema = z.unknown()

export const searchProfilesByVerifiedAccountQueryResponseSchema = z.lazy(() => searchProfilesByVerifiedAccount200Schema)